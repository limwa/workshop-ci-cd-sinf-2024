name: CI/CD

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      # Clone the repository
      - uses: actions/checkout@v4

      # Install Node.js 22 and NPM
      - uses: actions/setup-node@v4
        with:
          node-version: 22

      # Run the setup script (defined in package.json)
      - name: Setup project
        run: npm run setup

      # Run the lint script (defined in package.json)
      - name: Lint project
        run: npm run lint

  format:
    name: Check code formatting
    runs-on: ubuntu-latest
    steps:
      # Clone the repository
      - uses: actions/checkout@v4

      # Install Node.js 22 and NPM
      - uses: actions/setup-node@v4
        with:
          node-version: 22

      # Run the setup script (defined in package.json)
      - name: Setup project
        run: npm run setup

      # Run the script for checking the code formatting (defined in package.json)
      - name: Format project
        run: npm run format:check
  
  distribution:
    name: Build code distribution
    runs-on: ubuntu-latest
    needs: [lint, format]
    # Only run this job on the main branch
    # On pull_request, ref is the name of the branch that is being merged to main
    # Therefore, this condition is enough to ensure we are only doing this for a push
    # to main
    if: ${{ github.ref == 'refs/heads/main' }}
    concurrency:
      # `concurrency` ensures that only one job in the same group can run at a time
      group: "deploy-pages"
      cancel-in-progress: false
    steps:
      # Clone the repository
      - uses: actions/checkout@v4

      # Install Node.js 22 and NPM
      - uses: actions/setup-node@v4
        with:
          node-version: 22

      # Run the setup script (defined in package.json)
      - name: Setup project
        run: npm run setup

      # Run the build script (defined in package.json)
      - name: Build project
        run: GITHUB_PAGES="true" npm run build 

      - name: Upload Github Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist
          retention-days: 30 # Not needed, used so that participants can check the artifact afterwards

  deploy:
    name: Deploy to Github Pages
    runs-on: ubuntu-latest
    needs: [distribution]
    concurrency:
      group: "deploy-pages"
      cancel-in-progress: false
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4